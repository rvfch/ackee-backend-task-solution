openapi: 3.0.0
info:
  title: Problems API
  version: 1.1.0
  description: A simple API for creating, reading, updating, and answering riddles and arithmetic problems.

servers:
  - url: http://localhost:3000/api/v1

paths:
  /problems:
    get:
      summary: List all problems
      tags:
        - Problems
      security:
        - basicAuth: []
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum: [riddle, math]
          description: Filter by problem type
        - in: query
          name: status
          schema:
            type: string
            enum: [answered, unanswered]
          description: Filter by answer status for the authenticated user
      responses:
        '200':
          description: A list of problems
          content:
            application/json:
              schema:
                type: object
                properties:
                  problems:
                    type: array
                    items:
                      $ref: '#/components/schemas/Problem'
                  payload:
                    type: object
                    additionalProperties: true
    post:
      summary: Create a new problem
      tags:
        - Problems
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProblemInput'
      responses:
        '201':
          description: Problem created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  problem:
                    $ref: '#/components/schemas/Problem'
                  payload:
                    type: object
                    additionalProperties: true
  /problems/{id}:
    get:
      summary: Get a specific problem by ID
      tags:
        - Problems
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Details of the problem
          content:
            application/json:
              schema:
                type: object
                properties:
                  problem:
                    $ref: '#/components/schemas/Problem'
                  payload:
                    type: object
                    additionalProperties: true
    put:
      summary: Update a problem
      tags:
        - Problems
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProblemInput'
      responses:
        '200':
          description: Problem updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  problem:
                    $ref: '#/components/schemas/Problem'
                  payload:
                    type: object
                    additionalProperties: true
    delete:
      summary: Delete a problem
      tags:
        - Problems
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Problem deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  payload:
                    type: object
                    additionalProperties: true
  /problems/{id}/answer:
    post:
      summary: Answer a problem
      tags:
        - Answers
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                answer:
                  type: string
      responses:
        '200':
          description: Answer submitted and validated
          content:
            application/json:
              schema:
                type: object
                properties:
                  correct:
                    type: boolean
                  payload:
                    type: object
                    additionalProperties: true

components:
  schemas:
    Problem:
      type: object
      properties:
        id:
          type: integer
        author:
          type: string
        type:
          type: string
          enum: [riddle, math]
        problem:
          type: string
        answer:
          type: string
    ProblemInput:
      type: object
      required:
        - type
        - problem
      properties:
        type:
          type: string
          enum: [riddle, math]
        problem:
          type: string
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
